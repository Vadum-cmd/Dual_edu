{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"№\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Word\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Translation\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"lvl\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Mark as Familiar\")])], -1 /* HOISTED */);\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nconst _hoisted_3 = {\n  class: \"pagination\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchTerm = $event),\n    placeholder: \"Search words...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchTerm]]), _createElementVNode(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayedWords, (word, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: word.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(($data.currentPage - 1) * $data.pageSize + index + 1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(word.word), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(word.translation), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(word.lvl), 1 /* TEXT */), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => word.familiar = $event\n    }, null, 8 /* PROPS */, _hoisted_2), [[_vModelCheckbox, word.familiar]])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    disabled: $data.currentPage === 1,\n    onClick: _cache[1] || (_cache[1] = $event => $data.currentPage--)\n  }, \"Prev\", 8 /* PROPS */, _hoisted_4), _createElementVNode(\"span\", null, _toDisplayString($data.currentPage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    disabled: $data.currentPage === $options.pageCount,\n    onClick: _cache[2] || (_cache[2] = $event => $data.currentPage++)\n  }, \"Next\", 8 /* PROPS */, _hoisted_5)])]);\n}","map":{"version":3,"mappings":";gCAIEA,oBAQQ,6BAPRA,oBAMK,0BALHA,oBAAU,YAAN,GAAC,gBACLA,oBAAa,YAAT,MAAI,gBACRA,oBAAoB,YAAhB,aAAW,gBACfA,oBAAY,YAAR,KAAG,gBACPA,oBAAyB,YAArB,kBAAgB;;;EAanBC,KAAK,EAAC;AAAY;;;;uBAtBvBC,oBA2BM,8BA1BNF,oBAAsE;IAA/DG,IAAI,EAAC,MAAM;+DAAUC,gBAAU;IAAEC,WAAW,EAAC;iDAAxBD,gBAAU,KACtCJ,oBAmBQ,gBAlBNM,UAQQ,EACRN,oBAQQ,mCAPRE,oBAMKK,6BANuBC,uBAAc,GAA9BC,IAAI,EAAEC,KAAK;yBAAvBR,oBAMK;MANwCS,GAAG,EAAEF,IAAI,CAACG;QACrDZ,oBAAuD,8BAA/CI,iBAAW,QAAQA,cAAQ,GAAGM,KAAK,sBAC3CV,oBAAwB,6BAAjBS,IAAI,CAACA,IAAI,kBAChBT,oBAA+B,6BAAxBS,IAAI,CAACI,WAAW,kBACvBb,oBAAuB,6BAAhBS,IAAI,CAACK,GAAG,kBACfd,oBAAwD,6BAApDA,oBAA+C;MAAxCG,IAAI,EAAC,UAAU;uCAAUM,IAAI,CAACM,QAAQ;4DAAbN,IAAI,CAACM,QAAQ;sCAIrDf,oBAIM,OAJNgB,UAIM,GAHJhB,oBAA0E;IAAjEiB,QAAQ,EAAEb,iBAAW;IAASc,OAAK,sCAAEd,iBAAW;KAAI,MAAI,8BACjEJ,oBAA8B,+BAArBI,iBAAW,kBACpBJ,oBAAkF;IAAzEiB,QAAQ,EAAEb,iBAAW,KAAKI,kBAAS;IAAGU,OAAK,sCAAEd,iBAAW;KAAI,MAAI","names":["_createElementVNode","class","_createElementBlock","type","$data","placeholder","_hoisted_1","_Fragment","$options","word","index","key","id","translation","lvl","familiar","_hoisted_3","disabled","onClick"],"sourceRoot":"","sources":["D:\\site\\Dual_edu\\services\\frontend\\src\\components\\pages\\VocabularyPage.vue"],"sourcesContent":["<template>\r\n<div>\r\n<input type=\"text\" v-model=\"searchTerm\" placeholder=\"Search words...\">\r\n<table>\r\n  <thead>\r\n  <tr>\r\n    <th>№</th>\r\n    <th>Word</th>\r\n    <th>Translation</th>\r\n    <th>lvl</th>\r\n    <th>Mark as Familiar</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr v-for=\"(word, index) in displayedWords\" :key=\"word.id\">\r\n    <td>{{ (currentPage - 1) * pageSize + index + 1 }}</td>\r\n    <td>{{ word.word }}</td>\r\n    <td>{{ word.translation }}</td>\r\n    <td>{{ word.lvl }}</td>\r\n    <td><input type=\"checkbox\" v-model=\"word.familiar\"></td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n<div class=\"pagination\">\r\n  <button :disabled=\"currentPage === 1\" @click=\"currentPage--\">Prev</button>\r\n  <span>{{ currentPage }}</span>\r\n  <button :disabled=\"currentPage === pageCount\" @click=\"currentPage++\">Next</button>\r\n</div>\r\n</div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      words: [\r\n        {id: 1, word: 'Abate', translation: 'To decrease in intensity or amount', lvl: 'A1', familiar: false},\r\n        {id: 2, word: 'Benevolent', translation: 'Kind and generous', lvl: 'B2', familiar: false},\r\n        {id: 3, word: 'Cacophony', translation: 'Harsh, unpleasant sound', lvl: 'A1', familiar: false},\r\n        {id: 4, word: 'Divergent', translation: 'Moving apart from a common point', lvl: 'B2', familiar: false},\r\n        {id: 5, word: 'Ephemeral', translation: 'Lasting for a short time', lvl: 'C1', familiar: false},\r\n        {id: 6, word: 'Fastidious', translation: 'Very attentive to detail', lvl: 'C1', familiar: false},\r\n        {id: 7, word: 'Gregarious', translation: 'Sociable and outgoing', lvl: 'B2', familiar: false},\r\n        {id: 8, word: 'Histrionic', translation: 'Overly dramatic or theatrical', lvl: 'C1', familiar: false},\r\n        {\r\n          id: 9,\r\n          word: 'Iconoclast',\r\n          translation: 'Someone who attacks established beliefs or institutions',\r\n          lvl: 'C1',\r\n          familiar: false\r\n        },\r\n        {id: 10, word: 'Jocular', translation: 'Joking or humorous', lvl: 'B2', familiar: false},\r\n        {id: 11, word: 'Kismet', translation: 'Fate or destiny', lvl: 'C1', familiar: false},\r\n        {id: 12, word: 'Luminous', translation: 'Bright or shining', lvl: 'B1', familiar: false},\r\n        {id: 13, word: 'Mendacious', translation: 'Not telling the truth', lvl: 'C1', familiar: false},\r\n        {id: 14, word: 'Nefarious', translation: 'Evil or immoral', lvl: 'C1', familiar: false},\r\n        {\r\n          id: 15,\r\n          word: 'Oblivious',\r\n          translation: 'Not aware or concerned about what is happening', lvl: 'B2',\r\n          familiar: false\r\n        },\r\n        {id: 16, word: 'Panacea', translation: 'A solution or remedy for all problems', lvl: 'C1', familiar: false},\r\n        {id: 17, word: 'Quintessential', translation: 'The most typical or ideal example', lvl: 'C1', familiar: false},\r\n        {id: 18, word: 'Rancor', translation: 'Bitterness or resentment', lvl: 'C1', familiar: false},\r\n        {id: 19, word: 'Sycophant', translation: 'Someone who flatters to gain advantage', lvl: 'C1', familiar: false},\r\n        {id: 20, word: 'Truculent', translation: 'Aggressively defiant or hostile', lvl: 'C1', familiar: false}\r\n      ],\r\n      searchTerm: '',\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      familiarWords: [],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredWords() {\r\n      if (!this.searchTerm) {\r\n        return this.words;\r\n      }\r\n      return this.words.filter(word => {\r\n        return word.word.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n            word.lvl.toLowerCase().includes(this.searchTerm.toLowerCase());\r\n      });\r\n    },\r\n    pageCount() {\r\n      return Math.ceil(this.filteredWords.length / this.pageSize);\r\n    },\r\n    displayedWords() {\r\n      const startIndex = (this.currentPage - 1) * this.pageSize;\r\n      const endIndex = startIndex + this.pageSize;\r\n      return this.filteredWords.slice(startIndex, endIndex);\r\n    }\r\n  },\r\n  watch: {\r\n    filteredWords() {\r\n      this.currentPage = 1;\r\n    },\r\n    words: {\r\n      handler() {\r\n        this.familiarWords = this.words.filter(word => word.familiar);\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\ntable {\r\n  width: 150vh;\r\n  margin-top: 20px;\r\n  background-color: white;\r\n\r\n  th, td {\r\n    padding: 10px;\r\n    text-align: left;\r\n    border: 1px solid #ccc;\r\n  }\r\n\r\n  th {\r\n    background-color: #f1f1f1;\r\n    font-weight: bold;\r\n  }\r\n\r\n  tbody tr:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n}\r\n\r\n\r\ninput[type=\"text\"] {\r\n  padding: 10px;\r\n  width: 100%;\r\n  margin-top: 50px;\r\n  margin-bottom: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #66afe9;\r\n    box-shadow: 0 0 5px #66afe9;\r\n  }\r\n}\r\n\r\n.pagination {\r\n  margin-left: 42%;\r\n  margin-top: 12px;\r\n}\r\n\r\n.pagination button {\r\n  background-color: white;\r\n  border: 1px solid black;\r\n  padding: 5px 10px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n.pagination span {\r\n  background-color: black;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  margin: 0 5px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}