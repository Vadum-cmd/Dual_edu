{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Translation Challenge\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"score\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"question\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"translation\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"attempts\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $data.gameOver ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Game Over! Your final score is \" + _toDisplayString($data.score) + \".\", 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"Translate the following word:\")), !$data.gameOver ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", _hoisted_6, _toDisplayString($options.translation), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.guess = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.checkAnswer && $options.checkAnswer(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.guess]]), $data.attemptsLeft > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString($data.attemptsLeft) + \" attempts left.\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;gCACpBC,oBAA4C;EAAxCD,KAAK,EAAC;AAAO,GAAC,uBAAqB;;;EACpBA,KAAK,EAAC;;;;EACfA,KAAK,EAAC;;;;EACMA,KAAK,EAAC;;;EACvBA,KAAK,EAAC;AAAa;;;EAEKA,KAAK,EAAC;;;uBAPrCE,oBASM,OATNC,UASM,GARJC,UAA4C,EACnCC,cAAQ,kBAAjBH,oBAAgF,KAAhFI,UAAgF,EAA/C,iCAA+B,oBAAGD,WAAK,IAAG,GAAC,kCAC5EH,oBAA4D,KAA5DK,UAA4D,EAAjC,+BAA6B,KAC5CF,cAAQ,kBAApBH,oBAIM,OAJNM,UAIM,GAHJP,oBAA4C,KAA5CQ,UAA4C,mBAAlBC,oBAAW,kCACrCT,oBAAqF;IAA9EU,IAAI,EAAC,MAAM;IAACX,KAAK,EAAC,cAAc;+DAAUK,WAAK;IAAGO,OAAK,mDAAQF,qDAAW;iEAAhCL,WAAK,KAC7CA,kBAAY,sBAArBH,oBAAiF,KAAjFW,UAAiF,mBAAlCR,kBAAY,IAAG,iBAAe","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","$data","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","$options","type","onKeyup","_hoisted_7"],"sourceRoot":"","sources":["D:\\site\\Dual_edu\\services\\frontend\\src\\components\\pages\\PageGame.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Translation Challenge</h1>\r\n    <p v-if=\"gameOver\" class=\"score\">Game Over! Your final score is {{ score }}.</p>\r\n    <p v-else class=\"question\">Translate the following word:</p>\r\n    <div v-if=\"!gameOver\" class=\"form-group\">\r\n      <p class=\"translation\">{{ translation }}</p>\r\n      <input type=\"text\" class=\"form-control\" v-model=\"guess\" @keyup.enter=\"checkAnswer\" />\r\n      <p v-if=\"attemptsLeft > 0\" class=\"attempts\">{{ attemptsLeft }} attempts left.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      translations: [\r\n        { translation: \"Кіт\", keyword: \"cat\" },\r\n        { translation: \"Пeс\", keyword: \"dog\" },\r\n        { translation: \"Тато\", keyword: \"father\" },\r\n        { translation: \"Мама\", keyword: \"mother\" },\r\n        { translation: \"Живородний\", keyword: \"viviparous\" },\r\n      ],\r\n      currentQuestion: 0,\r\n      guess: \"\",\r\n      attemptsLeft: 3,\r\n      score: 0,\r\n      gameOver: false,\r\n    };\r\n  },\r\n  computed: {\r\n    translation() {\r\n      return this.translations[this.currentQuestion].translation;\r\n    },\r\n  },\r\n  methods: {\r\n    checkAnswer() {\r\n      const currentTranslation = this.translations[this.currentQuestion];\r\n      if (this.guess === currentTranslation.keyword) {\r\n        this.score++;\r\n        this.currentQuestion++;\r\n        this.guess = \"\";\r\n        this.attemptsLeft = 3;\r\n      } else {\r\n        this.attemptsLeft--;\r\n        if (this.attemptsLeft === 0) {\r\n          this.currentQuestion++;\r\n          this.guess = \"\";\r\n          this.attemptsLeft = 3;\r\n        }\r\n      }\r\n      if (this.currentQuestion === this.translations.length) {\r\n        this.gameOver = true;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f2f2f2;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.title {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.score {\r\n  font-size: 1.5rem;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.question {\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.translation {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-control {\r\n  font-size: 1.5rem;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.attempts {\r\n  font-size: 1.2rem;\r\n  margin-top: 5px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}